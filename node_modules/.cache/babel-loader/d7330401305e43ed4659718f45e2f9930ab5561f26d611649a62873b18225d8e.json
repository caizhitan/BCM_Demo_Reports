{"ast":null,"code":"import headerTitle from \"./ExcelHeaders\";\nimport { variationName, variationNumber } from \"../../DummyData\";\n\n// Colours for Report #1\nconst colourMap = {\n  Yellow: \"FCFC04\",\n  Orange: \"FFC000\",\n  Grey: \"FFA5A5A5\"\n};\nfunction styleFirstReport(worksheet) {\n  const titleName = variationName;\n  const titleNumber = variationNumber;\n  const headers = headerTitle();\n\n  // For Headers\n  let startRow = 6;\n  headers.forEach(header => {\n    let cell = worksheet.getCell(`A${startRow}`);\n    cell.value = header;\n    cell.alignment = {\n      horizontal: \"right\"\n    };\n    startRow++;\n  });\n  worksheet.getColumn(\"A\").width = 37;\n\n  // Main Title\n  worksheet.mergeCells(\"A2:L2\");\n  worksheet.getCell(\"A2\").font = {\n    size: 14,\n    underline: true\n  };\n  worksheet.getCell(\"A2\").alignment = {\n    horizontal: \"center\"\n  };\n  worksheet.getCell(\"A2\").value = `${titleName} (${titleNumber})`;\n\n  // Title: Mileage Calculation\n  worksheet.mergeCells(\"A4:B4\");\n  worksheet.getCell(\"A4\").alignment = {\n    horizontal: \"center\"\n  };\n  worksheet.getCell(\"A4\").value = \"Mileage Calculation\";\n\n  // Title: Day Type\n  worksheet.getCell(\"A5\").alignment = {\n    horizontal: \"center\"\n  };\n  worksheet.getCell(\"A5\").value = \"Day Type\";\n\n  // Title: Total Additional Mileage per Day Type\n  worksheet.getCell(\"B5\").value = \"Total Additional Mileage per Day Type\";\n  worksheet.getCell(\"B5\").alignment = {\n    horizontal: \"center\",\n    vertical: \"middle\",\n    wrapText: true\n  };\n\n  // Adding Borders for everything\n  worksheet.eachRow({\n    includeEmpty: true\n  }, (row, rowNumber) => {\n    // Start from row 3 onwards\n    if (rowNumber >= 3) {\n      row.eachCell({\n        includeEmpty: true\n      }, cell => {\n        // Apply borders if the cell has a value, text, or a fill color\n        if (cell.value || cell.text || cell.style && cell.style.fill) {\n          cell.border = {\n            top: {\n              style: \"thin\",\n              color: {\n                argb: \"FF000000\"\n              }\n            },\n            left: {\n              style: \"thin\",\n              color: {\n                argb: \"FF000000\"\n              }\n            },\n            bottom: {\n              style: \"thin\",\n              color: {\n                argb: \"FF000000\"\n              }\n            },\n            right: {\n              style: \"thin\",\n              color: {\n                argb: \"FF000000\"\n              }\n            }\n          };\n        }\n      });\n    }\n  });\n}\nexport { colourMap, styleFirstReport };","map":{"version":3,"names":["headerTitle","variationName","variationNumber","colourMap","Yellow","Orange","Grey","styleFirstReport","worksheet","titleName","titleNumber","headers","startRow","forEach","header","cell","getCell","value","alignment","horizontal","getColumn","width","mergeCells","font","size","underline","vertical","wrapText","eachRow","includeEmpty","row","rowNumber","eachCell","text","style","fill","border","top","color","argb","left","bottom","right"],"sources":["/Users/caizhitan/BCM_Reports/src/Pages/Admin/Reports/FirstReport/ExcelStylesUtil.js"],"sourcesContent":["import headerTitle from \"./ExcelHeaders\";\nimport { variationName, variationNumber } from \"../../DummyData\";\n\n// Colours for Report #1\nconst colourMap = {\n  Yellow: \"FCFC04\",\n  Orange: \"FFC000\",\n  Grey: \"FFA5A5A5\",\n};\n\nfunction styleFirstReport(worksheet) {\n  const titleName = variationName;\n  const titleNumber = variationNumber;\n  const headers = headerTitle();\n\n  // For Headers\n  let startRow = 6;\n  headers.forEach((header) => {\n    let cell = worksheet.getCell(`A${startRow}`);\n    cell.value = header;\n    cell.alignment = { horizontal: \"right\" };\n    startRow++;\n  });\n  worksheet.getColumn(\"A\").width = 37;\n\n  // Main Title\n  worksheet.mergeCells(\"A2:L2\");\n  worksheet.getCell(\"A2\").font = { size: 14, underline: true };\n  worksheet.getCell(\"A2\").alignment = { horizontal: \"center\" };\n  worksheet.getCell(\"A2\").value = `${titleName} (${titleNumber})`;\n\n  // Title: Mileage Calculation\n  worksheet.mergeCells(\"A4:B4\");\n  worksheet.getCell(\"A4\").alignment = { horizontal: \"center\" };\n  worksheet.getCell(\"A4\").value = \"Mileage Calculation\";\n\n  // Title: Day Type\n  worksheet.getCell(\"A5\").alignment = { horizontal: \"center\" };\n  worksheet.getCell(\"A5\").value = \"Day Type\";\n\n  // Title: Total Additional Mileage per Day Type\n  worksheet.getCell(\"B5\").value = \"Total Additional Mileage per Day Type\";\n  worksheet.getCell(\"B5\").alignment = {\n    horizontal: \"center\",\n    vertical: \"middle\",\n    wrapText: true,\n  };\n\n  // Adding Borders for everything\n  worksheet.eachRow({ includeEmpty: true }, (row, rowNumber) => {\n    // Start from row 3 onwards\n    if (rowNumber >= 3) {\n      row.eachCell({ includeEmpty: true }, (cell) => {\n        // Apply borders if the cell has a value, text, or a fill color\n        if (cell.value || cell.text || (cell.style && cell.style.fill)) {\n          cell.border = {\n            top: { style: \"thin\", color: { argb: \"FF000000\" } },\n            left: { style: \"thin\", color: { argb: \"FF000000\" } },\n            bottom: { style: \"thin\", color: { argb: \"FF000000\" } },\n            right: { style: \"thin\", color: { argb: \"FF000000\" } },\n          };\n        }\n      });\n    }\n  });\n}\n\nexport { colourMap, styleFirstReport };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}