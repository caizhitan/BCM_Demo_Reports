{"ast":null,"code":"var _jsxFileName = \"/Users/caizhitan/BCM_Reports/src/Pages/Admin/ExcelDropDown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { VariationSummaryButton, ServiceMileageButton, ContractVariationButton } from \"./Excel\";\nimport { BusData } from \"./DummyData\";\nimport MyIcon from \"../../assets/icons/dropdown_icon.svg\";\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { categorizedKeys } from \"./Reports/FirstReport/FirstReportData\";\nimport '@fontsource/lato'; // Defaults to weight 400 with all styles included.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  components: {\n    MuiMenu: {\n      styleOverrides: {\n        paper: {\n          maxHeight: \"200px\",\n          // Limit the height\n          overflowY: \"auto\",\n          // Enable vertical scrolling\n          //paddingRight: \"13px\",\n\n          \"&::-webkit-scrollbar\": {\n            width: \"7px\",\n            borderRadius: \"8px\",\n            backgroundColor: \"#FFFFFF\"\n          },\n          \"&::-webkit-scrollbar-thumb\": {\n            borderRadius: \"8px\",\n            background: \"#D9D9D9\"\n          },\n          borderRadius: \"4px\",\n          border: \"1px solid #466BDD\",\n          background: \"#FFF\",\n          boxShadow: \"0px 4px 10px 0px rgba(97, 139, 252, 0.15)\",\n          marginTop: \"5px\"\n        }\n      }\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: {\n          \"&:hover .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#466BDD\"\n          },\n          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#466BDD\"\n          }\n        },\n        notchedOutline: {\n          borderColor: \"#466BDD\"\n        }\n      }\n    },\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          marginTop: \"3px\",\n          marginBottom: \"3px\",\n          backgroundColour: \"transparent\",\n          \"&:hover, &.Mui-selected\": {\n            marginRight: \"6px\",\n            backgroundColor: \"#DEEFFF\",\n            borderRadius: \"5px\"\n          },\n          \"&.secondMenuItem\": {\n            \"&:hover\": {\n              marginLeft: \"6px\",\n              backgroundColor: \"#DEEFFF\",\n              borderRadius: \"5px\"\n            }\n          }\n        }\n      }\n    }\n  }\n});\nexport default function ExcelDropdown() {\n  _s();\n  const [selectedService, setSelectedService] = useState(\"\");\n  const [selectedContract, setSelectedContract] = useState(\"\");\n  const [selectedContract1, setSelectedContract1] = useState(\"\");\n\n  // For 1st Dropdown\n  const handleServiceChange = event => {\n    const selected = event.target.value;\n    setSelectedService(selected);\n    console.log(\"Selected Service:\", selected);\n  };\n  useEffect(() => {\n    console.log(\"Service in ExcelTestDropdown:\", selectedService);\n  }, [selectedService]);\n\n  // For 2nd Dropdown\n  const handleContractChange = event => {\n    const selected = event.target.value;\n    setSelectedContract(selected);\n    console.log(\"Selected Contract Report #2:\", selected);\n  };\n\n  // For 3rd Dropdown\n  const handleContractChange1 = event => {\n    const selected = event.target.value;\n    setSelectedContract1(selected);\n    console.log(\"Selected Contract Report #3:\", selected);\n  };\n\n  // Data to Populate 1st Dropdown\n  const categorizedData = {};\n  Object.keys(categorizedKeys).sort((a, b) => {\n    const numA = parseInt(a.substring(2), 10);\n    const numB = parseInt(b.substring(2), 10);\n    return numA - numB;\n  }).forEach(contract => {\n    const services = Array.from(Object.keys(categorizedKeys[contract]));\n    categorizedData[contract] = {};\n    services.forEach(service => {\n      // Splitting the service format \"ID_StartDate_EndDate_Type\"\n      const parts = service.split(\"_\");\n      // Parsing and formatting the dates\n      const startDate = parts[1];\n      const endDate = parts[2];\n      const formattedStartDate = `${startDate.substring(0, 2)}/${startDate.substring(2, 4)}/${startDate.substring(4)}`;\n      const formattedEndDate = `${endDate.substring(0, 2)}/${endDate.substring(2, 4)}/${endDate.substring(4)}`;\n      const datePeriod = `${formattedStartDate} - ${formattedEndDate}`;\n      if (!categorizedData[contract][datePeriod]) {\n        categorizedData[contract][datePeriod] = [];\n      }\n      categorizedData[contract][datePeriod].push(service);\n    });\n  });\n\n  // Data to Populate 2nd & 3rd Dropdown\n  const sortedContracts = [...BusData.body.contracts.map(contractObj => contractObj.contract), ...BusData.body.busFleet.map(fleetObj => fleetObj.contract)].sort((a, b) => {\n    const numA = parseInt(a.substring(2), 10);\n    const numB = parseInt(b.substring(2), 10);\n    return numA - numB;\n  });\n  const variationContracts = [...new Set(sortedContracts)];\n  function CustomDropdownIcon(props) {\n    return /*#__PURE__*/_jsxDEV(\"img\", {\n      src: MyIcon,\n      alt: \"custom-icon\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-button-pair\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-controls-container\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              m: 1,\n              width: \"300px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              sx: {\n                width: \"100%\",\n                height: \"52px\",\n                color: \"#466BDD\",\n                fontFamily: \"Lato\",\n                fontSize: \"20px\",\n                fontStyle: \"italic\",\n                fontWeight: \"400\"\n              },\n              value: selectedService || \"\",\n              displayEmpty: true,\n              onChange: handleServiceChange,\n              id: \"excel-test-native-select\",\n              IconComponent: CustomDropdownIcon,\n              renderValue: value => {\n                if (value) {\n                  const parts = value.split(\"_\");\n                  const serviceIdAndType = `${parts[0]}_${parts[parts.length - 1]}`;\n                  return serviceIdAndType;\n                }\n                return \"Select Service\";\n              },\n              children: Object.entries(categorizedData).flatMap(([contract, datePeriods]) => [/*#__PURE__*/_jsxDEV(MenuItem, {\n                sx: {\n                  color: \"#466BDD\",\n                  fontFamily: \"Lato\",\n                  fontSize: \"20px\",\n                  fontWeight: \"700\",\n                  backgroundColor: \"#FFF\",\n                  pointerEvents: \"none\"\n                },\n                children: contract\n              }, contract, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this), ...Object.entries(datePeriods).flatMap(([datePeriod, services]) => [/*#__PURE__*/_jsxDEV(MenuItem, {\n                sx: {\n                  color: \"#466BDD\",\n                  fontFamily: \"Lato\",\n                  fontSize: \"20px\",\n                  fontWeight: \"400\",\n                  backgroundColor: \"#FFF\",\n                  pointerEvents: \"none\"\n                },\n                children: datePeriod.replace(\"_\", \" to \")\n              }, datePeriod, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 25\n              }, this), ...services.map(service => {\n                const parts = service.split(\"_\");\n                const serviceIdAndType = `${parts[0]}_${parts[3]}`;\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: service,\n                  sx: {\n                    color: \"#466BDD\",\n                    fontFamily: \"Lato\",\n                    fontSize: \"20px\",\n                    fontWeight: \"400\",\n                    marginLeft: \"30px\",\n                    paddingLeft: \"35px\",\n                    marginRight: \"6px\",\n                    boxSizing: \"border-box\"\n                  },\n                  children: serviceIdAndType\n                }, service, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 29\n                }, this);\n              })])])\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: /*#__PURE__*/_jsxDEV(VariationSummaryButton, {\n            selectedService: selectedService,\n            selectedContract: selectedContract\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-button-pair\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-controls-container\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              m: 1,\n              width: \"300px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              sx: {\n                width: \"100%\",\n                height: \"52px\",\n                color: \"#466BDD\",\n                fontFamily: \"Lato\",\n                fontSize: \"20px\",\n                fontStyle: \"italic\",\n                fontWeight: \"400\"\n              },\n              value: selectedContract || \"\",\n              displayEmpty: true,\n              onChange: handleContractChange,\n              id: \"excel-test-native-select\",\n              IconComponent: CustomDropdownIcon,\n              renderValue: value => value || \"Select Contract\",\n              children: [...variationContracts].map(contract => /*#__PURE__*/_jsxDEV(MenuItem, {\n                className: \"secondMenuItem\",\n                value: contract,\n                sx: {\n                  color: \"#466BDD\",\n                  fontFamily: \"Lato\",\n                  fontSize: \"20px\",\n                  fontWeight: \"700\",\n                  backgroundColor: \"#FFF\",\n                  marginLeft: \"6px\"\n                },\n                children: contract\n              }, contract, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: /*#__PURE__*/_jsxDEV(ServiceMileageButton, {\n            selectedService: selectedService,\n            selectedContract: selectedContract\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-button-pair\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-controls-container\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              m: 1,\n              width: \"300px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              sx: {\n                width: \"100%\",\n                height: \"52px\",\n                color: \"#466BDD\",\n                fontFamily: \"Lato\",\n                fontSize: \"20px\",\n                fontStyle: \"italic\",\n                fontWeight: \"400\"\n              },\n              value: selectedContract1 || \"\",\n              displayEmpty: true,\n              onChange: handleContractChange1,\n              id: \"excel-test-native-select\",\n              IconComponent: CustomDropdownIcon,\n              renderValue: value => value || \"Select Contract\",\n              children: [...variationContracts].map(contract => /*#__PURE__*/_jsxDEV(MenuItem, {\n                className: \"secondMenuItem\",\n                value: contract,\n                sx: {\n                  color: \"#466BDD\",\n                  fontFamily: \"Lato\",\n                  fontSize: \"20px\",\n                  fontWeight: \"700\",\n                  backgroundColor: \"#FFF\",\n                  marginLeft: \"6px\"\n                },\n                children: contract\n              }, contract, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-container\",\n          children: /*#__PURE__*/_jsxDEV(ContractVariationButton, {\n            selectedContract1: selectedContract1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n_s(ExcelDropdown, \"N4XMNiyI3OS1+E6nlu55LsxHG2o=\");\n_c = ExcelDropdown;\nvar _c;\n$RefreshReg$(_c, \"ExcelDropdown\");","map":{"version":3,"names":["React","useState","useEffect","MenuItem","FormControl","Select","VariationSummaryButton","ServiceMileageButton","ContractVariationButton","BusData","MyIcon","ThemeProvider","createTheme","categorizedKeys","jsxDEV","_jsxDEV","theme","components","MuiMenu","styleOverrides","paper","maxHeight","overflowY","width","borderRadius","backgroundColor","background","border","boxShadow","marginTop","MuiOutlinedInput","root","borderColor","notchedOutline","MuiMenuItem","marginBottom","backgroundColour","marginRight","marginLeft","ExcelDropdown","_s","selectedService","setSelectedService","selectedContract","setSelectedContract","selectedContract1","setSelectedContract1","handleServiceChange","event","selected","target","value","console","log","handleContractChange","handleContractChange1","categorizedData","Object","keys","sort","a","b","numA","parseInt","substring","numB","forEach","contract","services","Array","from","service","parts","split","startDate","endDate","formattedStartDate","formattedEndDate","datePeriod","push","sortedContracts","body","contracts","map","contractObj","busFleet","fleetObj","variationContracts","Set","CustomDropdownIcon","props","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","children","className","sx","m","height","color","fontFamily","fontSize","fontStyle","fontWeight","displayEmpty","onChange","id","IconComponent","renderValue","serviceIdAndType","length","entries","flatMap","datePeriods","pointerEvents","replace","paddingLeft","boxSizing","_c","$RefreshReg$"],"sources":["/Users/caizhitan/BCM_Reports/src/Pages/Admin/ExcelDropDown.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport {\n  VariationSummaryButton,\n  ServiceMileageButton,\n  ContractVariationButton,\n} from \"./Excel\";\nimport { BusData } from \"./DummyData\";\nimport MyIcon from \"../../assets/icons/dropdown_icon.svg\"\nimport { ThemeProvider, createTheme } from \"@mui/material/styles\";\nimport { categorizedKeys } from \"./Reports/FirstReport/FirstReportData\";\nimport '@fontsource/lato'; // Defaults to weight 400 with all styles included.\n\n\nconst theme = createTheme({\n  components: {\n    MuiMenu: {\n      styleOverrides: {\n        paper: {\n          maxHeight: \"200px\", // Limit the height\n          overflowY: \"auto\", // Enable vertical scrolling\n          //paddingRight: \"13px\",\n\n          \"&::-webkit-scrollbar\": {\n            width: \"7px\",\n            borderRadius: \"8px\",\n            backgroundColor: \"#FFFFFF\",\n          },\n          \"&::-webkit-scrollbar-thumb\": {\n            borderRadius: \"8px\",\n            background: \"#D9D9D9\",\n          },\n          borderRadius: \"4px\",\n          border: \"1px solid #466BDD\",\n          background: \"#FFF\",\n          boxShadow: \"0px 4px 10px 0px rgba(97, 139, 252, 0.15)\",\n          marginTop: \"5px\",\n        },\n      },\n    },\n    MuiOutlinedInput: {\n      styleOverrides: {\n        root: {\n          \"&:hover .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#466BDD\",\n          },\n          \"&.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n            borderColor: \"#466BDD\",\n          },\n        },\n        notchedOutline: {\n          borderColor: \"#466BDD\",\n        },\n      },\n    },\n    MuiMenuItem: {\n      styleOverrides: {\n        root: {\n          marginTop: \"3px\",\n          marginBottom: \"3px\",\n          backgroundColour: \"transparent\",\n          \"&:hover, &.Mui-selected\": {\n            marginRight: \"6px\",\n            backgroundColor: \"#DEEFFF\",\n            borderRadius: \"5px\",\n          },\n          \"&.secondMenuItem\": {\n            \"&:hover\": {\n              marginLeft: \"6px\",\n              backgroundColor: \"#DEEFFF\",\n              borderRadius: \"5px\",\n            },\n          },\n        },\n      },\n    },\n  },\n});\n\nexport default function ExcelDropdown() {\n  const [selectedService, setSelectedService] = useState(\"\");\n  const [selectedContract, setSelectedContract] = useState(\"\");\n  const [selectedContract1, setSelectedContract1] = useState(\"\");\n\n  // For 1st Dropdown\n  const handleServiceChange = (event) => {\n    const selected = event.target.value;\n    setSelectedService(selected);\n    console.log(\"Selected Service:\", selected);\n  };\n  useEffect(() => {\n    console.log(\"Service in ExcelTestDropdown:\", selectedService);\n  }, [selectedService]);\n\n  // For 2nd Dropdown\n  const handleContractChange = (event) => {\n    const selected = event.target.value;\n    setSelectedContract(selected);\n    console.log(\"Selected Contract Report #2:\", selected);\n  };\n\n  // For 3rd Dropdown\n  const handleContractChange1 = (event) => {\n    const selected = event.target.value;\n    setSelectedContract1(selected);\n    console.log(\"Selected Contract Report #3:\", selected);\n  };\n\n  // Data to Populate 1st Dropdown\n  const categorizedData = {};\n  Object.keys(categorizedKeys)\n    .sort((a, b) => {\n      const numA = parseInt(a.substring(2), 10);\n      const numB = parseInt(b.substring(2), 10);\n      return numA - numB;\n    })\n    .forEach((contract) => {\n      const services = Array.from(Object.keys(categorizedKeys[contract]));\n      categorizedData[contract] = {};\n\n      services.forEach((service) => {\n        // Splitting the service format \"ID_StartDate_EndDate_Type\"\n        const parts = service.split(\"_\");\n        // Parsing and formatting the dates\n        const startDate = parts[1];\n        const endDate = parts[2];\n        const formattedStartDate = `${startDate.substring(\n          0,\n          2\n        )}/${startDate.substring(2, 4)}/${startDate.substring(4)}`;\n        const formattedEndDate = `${endDate.substring(\n          0,\n          2\n        )}/${endDate.substring(2, 4)}/${endDate.substring(4)}`;\n\n        const datePeriod = `${formattedStartDate} - ${formattedEndDate}`;\n\n        if (!categorizedData[contract][datePeriod]) {\n          categorizedData[contract][datePeriod] = [];\n        }\n\n        categorizedData[contract][datePeriod].push(service);\n      });\n    });\n\n  // Data to Populate 2nd & 3rd Dropdown\n  const sortedContracts = [\n    ...BusData.body.contracts.map((contractObj) => contractObj.contract),\n    ...BusData.body.busFleet.map((fleetObj) => fleetObj.contract),\n  ].sort((a, b) => {\n    const numA = parseInt(a.substring(2), 10);\n    const numB = parseInt(b.substring(2), 10);\n    return numA - numB;\n  });\n  const variationContracts = [...new Set(sortedContracts)];\n\n  function CustomDropdownIcon(props) {\n    return <img src={MyIcon} alt=\"custom-icon\" {...props} />;\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"main-container\">\n        {/* Variation Summary Pair */}\n        <div className=\"form-button-pair\">\n          <div className=\"form-controls-container\">\n            <FormControl sx={{ m: 1, width: \"300px\" }}>\n              <Select\n                sx={{\n                  width: \"100%\",\n                  height: \"52px\",\n                  color: \"#466BDD\",\n                  fontFamily: \"Lato\",\n                  fontSize: \"20px\",\n                  fontStyle: \"italic\",\n                  fontWeight: \"400\",\n                }}\n                value={selectedService || \"\"}\n                displayEmpty\n                onChange={handleServiceChange}\n                id=\"excel-test-native-select\"\n                IconComponent={CustomDropdownIcon}\n                renderValue={(value) => {\n                  if (value) {\n                    const parts = value.split(\"_\");\n                    const serviceIdAndType = `${parts[0]}_${\n                      parts[parts.length - 1]\n                    }`;\n                    return serviceIdAndType;\n                  }\n                  return \"Select Service\";\n                }}\n              >\n                {Object.entries(categorizedData).flatMap(\n                  ([contract, datePeriods]) => [\n                    <MenuItem\n                      sx={{\n                        color: \"#466BDD\",\n                        fontFamily: \"Lato\",\n                        fontSize: \"20px\",\n                        fontWeight: \"700\",\n                        backgroundColor: \"#FFF\",\n                        pointerEvents: \"none\",\n                      }}\n                      key={contract}\n                    >\n                      {contract}\n                    </MenuItem>,\n                    ...Object.entries(datePeriods).flatMap(\n                      ([datePeriod, services]) => [\n                        <MenuItem\n                          sx={{\n                            color: \"#466BDD\",\n                            fontFamily: \"Lato\",\n                            fontSize: \"20px\",\n                            fontWeight: \"400\",\n                            backgroundColor: \"#FFF\",\n                            pointerEvents: \"none\",\n                          }}\n                          key={datePeriod}\n                        >\n                          {datePeriod.replace(\"_\", \" to \")}\n                        </MenuItem>,\n                        ...services.map((service) => {\n                          const parts = service.split(\"_\");\n                          const serviceIdAndType = `${parts[0]}_${parts[3]}`;\n                          return (\n                            <MenuItem\n                              value={service}\n                              key={service}\n                              sx={{\n                                color: \"#466BDD\",\n                                fontFamily: \"Lato\",\n                                fontSize: \"20px\",\n                                fontWeight: \"400\",\n                                marginLeft: \"30px\",\n                                paddingLeft: \"35px\",\n                                marginRight: \"6px\",\n                                boxSizing: \"border-box\",\n                              }}\n                            >\n                              {serviceIdAndType}\n                            </MenuItem>\n                          );\n                        }),\n                      ]\n                    ),\n                  ]\n                )}\n              </Select>\n            </FormControl>\n          </div>\n\n          <div className=\"buttons-container\">\n            <VariationSummaryButton\n              selectedService={selectedService}\n              selectedContract={selectedContract}\n            />\n          </div>\n        </div>\n\n        {/* Service Mileage and Cost Summary Pair */}\n        <div className=\"form-button-pair\">\n          <div className=\"form-controls-container\">\n            <FormControl sx={{ m: 1, width: \"300px\" }}>\n              <Select\n                sx={{\n                  width: \"100%\",\n                  height: \"52px\",\n                  color: \"#466BDD\",\n                  fontFamily: \"Lato\",\n                  fontSize: \"20px\",\n                  fontStyle: \"italic\",\n                  fontWeight: \"400\",\n                }}\n                value={selectedContract || \"\"}\n                displayEmpty\n                onChange={handleContractChange}\n                id=\"excel-test-native-select\"\n                IconComponent={CustomDropdownIcon}\n                renderValue={(value) => value || \"Select Contract\"}\n              >\n                {[...variationContracts].map((contract) => (\n                  <MenuItem\n                    className=\"secondMenuItem\"\n                    key={contract}\n                    value={contract}\n                    sx={{\n                      color: \"#466BDD\",\n                      fontFamily: \"Lato\",\n                      fontSize: \"20px\",\n                      fontWeight: \"700\",\n                      backgroundColor: \"#FFF\",\n                      marginLeft: \"6px\",\n                    }}\n                  >\n                    {contract}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n          <div className=\"buttons-container\">\n            <ServiceMileageButton\n              selectedService={selectedService}\n              selectedContract={selectedContract}\n            />\n          </div>\n        </div>\n\n        {/* Contract Variation Cost Summary Pair */}\n        <div className=\"form-button-pair\">\n          <div className=\"form-controls-container\">\n            <FormControl sx={{ m: 1, width: \"300px\" }}>\n              <Select\n                sx={{\n                  width: \"100%\",\n                  height: \"52px\",\n                  color: \"#466BDD\",\n                  fontFamily: \"Lato\",\n                  fontSize: \"20px\",\n                  fontStyle: \"italic\",\n                  fontWeight: \"400\",\n                }}\n                value={selectedContract1 || \"\"}\n                displayEmpty\n                onChange={handleContractChange1}\n                id=\"excel-test-native-select\"\n                IconComponent={CustomDropdownIcon}\n                renderValue={(value) => value || \"Select Contract\"}\n              >\n                {[...variationContracts].map((contract) => (\n                  <MenuItem\n                    className=\"secondMenuItem\"\n                    key={contract}\n                    value={contract}\n                    sx={{\n                      color: \"#466BDD\",\n                      fontFamily: \"Lato\",\n                      fontSize: \"20px\",\n                      fontWeight: \"700\",\n                      backgroundColor: \"#FFF\",\n                      marginLeft: \"6px\",\n                    }}\n                  >\n                    {contract}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </div>\n          <div className=\"buttons-container\">\n            <ContractVariationButton selectedContract1={selectedContract1} />\n          </div>\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}