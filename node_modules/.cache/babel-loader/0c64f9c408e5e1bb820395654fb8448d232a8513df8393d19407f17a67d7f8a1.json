{"ast":null,"code":"var _jsxFileName = \"/Users/caizhitan/BCM_Reports/src/Pages/Admin/RoundingRules.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction roundToNearest(grandTotal, nearest) {\n  return Math.ceil(grandTotal / nearest) * nearest;\n}\nfunction roundDownToNearest(grandTotal, nearest) {\n  return Math.floor(grandTotal / nearest) * nearest;\n}\nfunction roundGrandTotal(grandTotal) {\n  const rule = roundingRules.find(rule => rule.check(grandTotal));\n  return rule ? rule.round(grandTotal) : grandTotal;\n}\nconst roundingRules = [{\n  check: grandTotal => grandTotal > 1000,\n  round: grandTotal => roundToNearest(grandTotal, 1000)\n}, {\n  check: grandTotal => grandTotal > 100,\n  round: grandTotal => roundToNearest(grandTotal, 100)\n}, {\n  check: grandTotal => grandTotal > 10,\n  round: grandTotal => roundToNearest(grandTotal, 10)\n}, {\n  check: grandTotal => grandTotal > 0,\n  round: () => 10\n}, {\n  check: grandTotal => grandTotal < -1000,\n  round: grandTotal => roundDownToNearest(grandTotal, 1000)\n}, {\n  check: grandTotal => grandTotal < -100,\n  round: grandTotal => roundDownToNearest(grandTotal, 100)\n}, {\n  check: grandTotal => grandTotal < -10,\n  round: grandTotal => roundDownToNearest(grandTotal, 10)\n}, {\n  check: grandTotal => grandTotal < 0,\n  round: () => -10\n}];\nfunction roundGrandTotal1000(grandTotal) {\n  const rule = roundingRules1000.find(rule => rule.check(grandTotal));\n  return rule ? rule.round(grandTotal) : grandTotal;\n}\nconst roundingRules1000 = [{\n  check: grandTotal => grandTotal >= 0,\n  round: grandTotal => roundToNearest(grandTotal, 1000)\n}, {\n  check: grandTotal => grandTotal < 0,\n  round: grandTotal => roundDownToNearest(grandTotal, 1000)\n}];\n\n// Admin Page Rounding Tester\nfunction RoundingTester() {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [roundedValue, setRoundedValue] = useState(null);\n  const [inputValue1, setInputValue1] = useState(\"\");\n  const [roundedValue1, setRoundedValue1] = useState(null);\n  const handleInputChange = e => {\n    const value = e.target.value;\n    // Allow only numbers or a minus sign followed by numbers\n    if (/^-?\\d*\\.?\\d*$/.test(value)) {\n      setInputValue(value);\n    } else {\n      setInputValue(\"\");\n    }\n  };\n  const handleInputChange1 = e => {\n    const value = e.target.value;\n    // Allow only numbers or a minus sign followed by numbers\n    if (/^-?\\d*\\.?\\d*$/.test(value)) {\n      setInputValue1(value);\n    } else {\n      setInputValue1(\"\");\n    }\n  };\n  const handleRoundGrandTotal = () => {\n    const numValue = parseFloat(inputValue);\n    const rounded = roundGrandTotal(numValue);\n    setRoundedValue(rounded);\n  };\n  const handleRoundGrandTotal1000 = () => {\n    const numValue = parseFloat(inputValue1);\n    const rounded = roundGrandTotal1000(numValue);\n    setRoundedValue1(rounded);\n  };\n  const verticalStyles = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    height: \"100%\",\n    padding: \"20px\"\n  };\n  const roundingStyles = {\n    container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"flex-start\",\n      marginTop: \"20px\"\n    },\n    input: {\n      padding: \"10px\",\n      fontSize: \"16px\",\n      marginBottom: \"10px\"\n    },\n    button: {\n      padding: \"10px 20px\",\n      fontSize: \"16px\",\n      backgroundColor: \"#007bff\",\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"5px\",\n      cursor: \"pointer\",\n      marginBottom: \"10px\"\n    },\n    result: {\n      fontSize: \"18px\",\n      color: \"#333\"\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: verticalStyles,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: roundingStyles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue1,\n        onChange: handleInputChange1,\n        placeholder: \"Enter a number\",\n        style: roundingStyles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRoundGrandTotal1000,\n        style: roundingStyles.button,\n        children: \"Round Number for Report #1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), roundedValue1 !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: roundingStyles.result,\n        children: [\"Rounded Value: \", roundedValue1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: roundingStyles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: handleInputChange,\n        placeholder: \"Enter a number\",\n        style: roundingStyles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRoundGrandTotal,\n        style: roundingStyles.button,\n        children: \"Round Number for Report #3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), roundedValue !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: roundingStyles.result,\n        children: [\"Rounded Value: \", roundedValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(RoundingTester, \"igrNsdm6a+d/eg5aVI8CiobrggE=\");\n_c = RoundingTester;\nexport { roundGrandTotal, roundGrandTotal1000, RoundingTester };\nvar _c;\n$RefreshReg$(_c, \"RoundingTester\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","roundToNearest","grandTotal","nearest","Math","ceil","roundDownToNearest","floor","roundGrandTotal","rule","roundingRules","find","check","round","roundGrandTotal1000","roundingRules1000","RoundingTester","_s","inputValue","setInputValue","roundedValue","setRoundedValue","inputValue1","setInputValue1","roundedValue1","setRoundedValue1","handleInputChange","e","value","target","test","handleInputChange1","handleRoundGrandTotal","numValue","parseFloat","rounded","handleRoundGrandTotal1000","verticalStyles","display","flexDirection","justifyContent","height","padding","roundingStyles","container","alignItems","marginTop","input","fontSize","marginBottom","button","backgroundColor","color","border","borderRadius","cursor","result","style","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/caizhitan/BCM_Reports/src/Pages/Admin/RoundingRules.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction roundToNearest(grandTotal, nearest) {\n  return Math.ceil(grandTotal / nearest) * nearest;\n}\n\nfunction roundDownToNearest(grandTotal, nearest) {\n  return Math.floor(grandTotal / nearest) * nearest;\n}\nfunction roundGrandTotal(grandTotal) {\n  const rule = roundingRules.find((rule) => rule.check(grandTotal));\n  return rule ? rule.round(grandTotal) : grandTotal;\n}\nconst roundingRules = [\n  {\n    check: (grandTotal) => grandTotal > 1000,\n    round: (grandTotal) => roundToNearest(grandTotal, 1000),\n  },\n  {\n    check: (grandTotal) => grandTotal > 100,\n    round: (grandTotal) => roundToNearest(grandTotal, 100),\n  },\n  {\n    check: (grandTotal) => grandTotal > 10,\n    round: (grandTotal) => roundToNearest(grandTotal, 10),\n  },\n  { check: (grandTotal) => grandTotal > 0, round: () => 10 },\n  {\n    check: (grandTotal) => grandTotal < -1000,\n    round: (grandTotal) => roundDownToNearest(grandTotal, 1000),\n  },\n  {\n    check: (grandTotal) => grandTotal < -100,\n    round: (grandTotal) => roundDownToNearest(grandTotal, 100),\n  },\n  {\n    check: (grandTotal) => grandTotal < -10,\n    round: (grandTotal) => roundDownToNearest(grandTotal, 10),\n  },\n  { check: (grandTotal) => grandTotal < 0, round: () => -10 },\n];\n\nfunction roundGrandTotal1000(grandTotal) {\n  const rule = roundingRules1000.find((rule) => rule.check(grandTotal));\n  return rule ? rule.round(grandTotal) : grandTotal;\n}\n\nconst roundingRules1000 = [\n  {\n    check: (grandTotal) => grandTotal >= 0,\n    round: (grandTotal) => roundToNearest(grandTotal, 1000),\n  },\n  {\n    check: (grandTotal) => grandTotal < 0,\n    round: (grandTotal) => roundDownToNearest(grandTotal, 1000),\n  },\n];\n\n// Admin Page Rounding Tester\nfunction RoundingTester() {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [roundedValue, setRoundedValue] = useState(null);\n  const [inputValue1, setInputValue1] = useState(\"\");\n  const [roundedValue1, setRoundedValue1] = useState(null);\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    // Allow only numbers or a minus sign followed by numbers\n    if (/^-?\\d*\\.?\\d*$/.test(value)) {\n      setInputValue(value);\n    } else {\n      setInputValue(\"\");\n    }\n  };\n\n  const handleInputChange1 = (e) => {\n    const value = e.target.value;\n    // Allow only numbers or a minus sign followed by numbers\n    if (/^-?\\d*\\.?\\d*$/.test(value)) {\n      setInputValue1(value);\n    } else {\n      setInputValue1(\"\");\n    }\n  };\n\n  const handleRoundGrandTotal = () => {\n    const numValue = parseFloat(inputValue);\n    const rounded = roundGrandTotal(numValue);\n    setRoundedValue(rounded);\n  };\n\n  const handleRoundGrandTotal1000 = () => {\n    const numValue = parseFloat(inputValue1);\n    const rounded = roundGrandTotal1000(numValue);\n    setRoundedValue1(rounded);\n  };\n\n  const verticalStyles = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-around\",\n    height: \"100%\",\n    padding: \"20px\",\n  };\n\n  const roundingStyles = {\n    container: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"flex-start\",\n      marginTop: \"20px\",\n    },\n    input: {\n      padding: \"10px\",\n      fontSize: \"16px\",\n      marginBottom: \"10px\",\n    },\n    button: {\n      padding: \"10px 20px\",\n      fontSize: \"16px\",\n      backgroundColor: \"#007bff\",\n      color: \"white\",\n      border: \"none\",\n      borderRadius: \"5px\",\n      cursor: \"pointer\",\n      marginBottom: \"10px\",\n    },\n    result: {\n      fontSize: \"18px\",\n      color: \"#333\",\n    },\n  };\n  return (\n    <div style={verticalStyles}>\n      <div style={roundingStyles.container}>\n        <input\n          type=\"text\"\n          value={inputValue1}\n          onChange={handleInputChange1}\n          placeholder=\"Enter a number\"\n          style={roundingStyles.input}\n        />\n        <button onClick={handleRoundGrandTotal1000} style={roundingStyles.button}>\n          Round Number for Report #1\n        </button>\n        {roundedValue1 !== null && (\n          <p style={roundingStyles.result}>Rounded Value: {roundedValue1}</p>\n        )}\n      </div>\n      <div style={roundingStyles.container}>\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder=\"Enter a number\"\n          style={roundingStyles.input}\n        />\n        <button onClick={handleRoundGrandTotal} style={roundingStyles.button}>\n          Round Number for Report #3\n        </button>\n        {roundedValue !== null && (\n          <p style={roundingStyles.result}>Rounded Value: {roundedValue}</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport { roundGrandTotal, roundGrandTotal1000, RoundingTester };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}